Para o frontend considerando que usamos Node e Express com Bootstrap5 e Material Design, escreva o index.js atualizado para gerenciar todas as funções da página index.html que implementarão as funcionalidades de: Definir um nome para equipe de pesquisa; Escolher o arquivo CSV com nome de pesquisadores; Aplicação criar uma subpasta em static/equipes/ com o nome de equipe informado; Salvar nessa subpasta a lista de nomes de pesquisadores; Criar uma fila de requisições gerenciada pelo RabbitMQ; Disparar o processamento em paralelo em segundo plano do microsserviço de scrap; E receber as informações de sucesso ou falha na extração de cada nome, renderizando o status da extração na interface de usuário na mesma página index.html; Persistir os dados extraídos com sucesso em Neo4j. Tudo isso em uma estrutura monolitica em monorepo, totalmente modularizada e desacoplada, com Clean Arquitecture e EDD. 

Escreva o static\index.js para gerenciar todas as funções da página index.html que implementarão as funcionalidades de: Definir um nome para equipe de pesquisa; Escolher o arquivo CSV com nome de pesquisadores; Aplicação criar uma subpasta em static/equipes/ com o nome de equipe informado; Salvar nessa subpasta a lista de nomes de pesquisadores; Criar uma fila de requisições gerenciada pelo RabbitMQ; Disparar o processamento em paralelo em segundo plano do microsserviço de scrap; E receber as informações de sucesso ou falha na extração de cada nome, renderizando o status da extração na interface de usuário na mesma página index.html; Persistir os dados extraídos com sucesso em Neo4j. Tudo isso em uma estrutura monolitica em monorepo, totalmente modularizada e desacoplada, com Clean Arquitecture e EDD. 

Crie um elemento a ser renderizado na página static\index.html que imediatamente após o usuário enviar o arquivo com a lista de docentes pelo form da página index.hmtl, aplicação salve o arquivo no caminho static/equipes, com aviso de substituir arquivo atual, se já houver arquivo com mesmo nome, ou mudar o nome do arquivo, e em seguida à confirmação do nome de arquivo pelo usuário dispare o evento que inicia a função de scrapping, apresentando no index.html a leitura de cada nome de pesquisador do arquivo CSV.